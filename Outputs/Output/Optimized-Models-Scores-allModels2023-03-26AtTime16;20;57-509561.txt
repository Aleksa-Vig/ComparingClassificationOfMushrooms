### 2023-03-26_16-20-57 ### 
Getting data from datacleaner... 
Got data! 
Splitting data into train test val 
Created classifiers for [RandomForestClassifier(), DecisionTreeClassifier(), KNeighborsClassifier(), SVC(), MLPClassifier()] 
Starting to build models..... [RandomForestClassifier(), DecisionTreeClassifier(), KNeighborsClassifier(), SVC(), MLPClassifier()] 
Building Model on: Random Forest 
Best params for precision_score 
Best params found!{'max_depth': 15, 'max_features': 3, 'min_samples_split': 5, 'n_estimators': 300} 
Time elapsed: (hh:mm:ss:ms) 0:00:48.111015 
Saving Model as: model-Random Forest-.model 
Time elapsed: (hh:mm:ss:ms) 0:00:00 
Possible tests: dict_keys(['explained_variance', 'r2', 'max_error', 'matthews_corrcoef', 'neg_median_absolute_error', 'neg_mean_absolute_error', 'neg_mean_absolute_percentage_error', 'neg_mean_squared_error', 'neg_mean_squared_log_error', 'neg_root_mean_squared_error', 'neg_mean_poisson_deviance', 'neg_mean_gamma_deviance', 'accuracy', 'top_k_accuracy', 'roc_auc', 'roc_auc_ovr', 'roc_auc_ovo', 'roc_auc_ovr_weighted', 'roc_auc_ovo_weighted', 'balanced_accuracy', 'average_precision', 'neg_log_loss', 'neg_brier_score', 'positive_likelihood_ratio', 'neg_negative_likelihood_ratio', 'adjusted_rand_score', 'rand_score', 'homogeneity_score', 'completeness_score', 'v_measure_score', 'mutual_info_score', 'adjusted_mutual_info_score', 'normalized_mutual_info_score', 'fowlkes_mallows_score', 'precision', 'precision_macro', 'precision_micro', 'precision_samples', 'precision_weighted', 'recall', 'recall_macro', 'recall_micro', 'recall_samples', 'recall_weighted', 'f1', 'f1_macro', 'f1_micro', 'f1_samples', 'f1_weighted', 'jaccard', 'jaccard_macro', 'jaccard_micro', 'jaccard_samples', 'jaccard_weighted']) 
Testing model on Train 
Time elapsed: (hh:mm:ss:ms) 0:00:00.094212 
train-accuracy_score: 0.9996666666666667 
train-precision_score: 0.9996709443896018 
train-recall_score: 0.9996663329996663 
train-f1_score: 0.999668473904272 
Testing model on val 
Time elapsed: (hh:mm:ss:ms) 0:00:00.043490 
val-accuracy_score: 0.838 
val-precision_score: 0.8415261996682348 
val-recall_score: 0.8388080418804084 
val-f1_score: 0.8368745810312963 
Testing model on test 
Time elapsed: (hh:mm:ss:ms) 0:00:00.045632 
test-accuracy_score: 0.86 
test-precision_score: 0.863913435862981 
test-recall_score: 0.863067996843025 
test-f1_score: 0.8596395977756844 
Building Model on: Decision Tree 
Best params for precision_score 
Best params found!{'max_depth': 5, 'max_features': 20, 'splitter': 'best'} 
Time elapsed: (hh:mm:ss:ms) 0:00:00.330810 
Saving Model as: model-Decision Tree-.model 
Time elapsed: (hh:mm:ss:ms) 0:00:00 
Possible tests: dict_keys(['explained_variance', 'r2', 'max_error', 'matthews_corrcoef', 'neg_median_absolute_error', 'neg_mean_absolute_error', 'neg_mean_absolute_percentage_error', 'neg_mean_squared_error', 'neg_mean_squared_log_error', 'neg_root_mean_squared_error', 'neg_mean_poisson_deviance', 'neg_mean_gamma_deviance', 'accuracy', 'top_k_accuracy', 'roc_auc', 'roc_auc_ovr', 'roc_auc_ovo', 'roc_auc_ovr_weighted', 'roc_auc_ovo_weighted', 'balanced_accuracy', 'average_precision', 'neg_log_loss', 'neg_brier_score', 'positive_likelihood_ratio', 'neg_negative_likelihood_ratio', 'adjusted_rand_score', 'rand_score', 'homogeneity_score', 'completeness_score', 'v_measure_score', 'mutual_info_score', 'adjusted_mutual_info_score', 'normalized_mutual_info_score', 'fowlkes_mallows_score', 'precision', 'precision_macro', 'precision_micro', 'precision_samples', 'precision_weighted', 'recall', 'recall_macro', 'recall_micro', 'recall_samples', 'recall_weighted', 'f1', 'f1_macro', 'f1_micro', 'f1_samples', 'f1_weighted', 'jaccard', 'jaccard_macro', 'jaccard_micro', 'jaccard_samples', 'jaccard_weighted']) 
Testing model on Train 
Time elapsed: (hh:mm:ss:ms) 0:00:00.001507 
train-accuracy_score: 0.814 
train-precision_score: 0.8162915914950745 
train-recall_score: 0.8142991169617391 
train-f1_score: 0.81260157727727 
Testing model on val 
Time elapsed: (hh:mm:ss:ms) 0:00:00.000999 
val-accuracy_score: 0.762 
val-precision_score: 0.764799993235369 
val-recall_score: 0.7617885697540636 
val-f1_score: 0.7608902925460065 
Testing model on test 
Time elapsed: (hh:mm:ss:ms) 0:00:00.000998 
test-accuracy_score: 0.747 
test-precision_score: 0.7495370061332368 
test-recall_score: 0.7496753916832019 
test-f1_score: 0.7462705253819713 
Building Model on: K-Nearest Neighbors 
Best params for precision_score 
Best params found!{'n_neighbors': 15, 'weights': 'uniform'} 
Time elapsed: (hh:mm:ss:ms) 0:00:00.545214 
Saving Model as: model-K-Nearest Neighbors-.model 
Time elapsed: (hh:mm:ss:ms) 0:00:00 
Possible tests: dict_keys(['explained_variance', 'r2', 'max_error', 'matthews_corrcoef', 'neg_median_absolute_error', 'neg_mean_absolute_error', 'neg_mean_absolute_percentage_error', 'neg_mean_squared_error', 'neg_mean_squared_log_error', 'neg_root_mean_squared_error', 'neg_mean_poisson_deviance', 'neg_mean_gamma_deviance', 'accuracy', 'top_k_accuracy', 'roc_auc', 'roc_auc_ovr', 'roc_auc_ovo', 'roc_auc_ovr_weighted', 'roc_auc_ovo_weighted', 'balanced_accuracy', 'average_precision', 'neg_log_loss', 'neg_brier_score', 'positive_likelihood_ratio', 'neg_negative_likelihood_ratio', 'adjusted_rand_score', 'rand_score', 'homogeneity_score', 'completeness_score', 'v_measure_score', 'mutual_info_score', 'adjusted_mutual_info_score', 'normalized_mutual_info_score', 'fowlkes_mallows_score', 'precision', 'precision_macro', 'precision_micro', 'precision_samples', 'precision_weighted', 'recall', 'recall_macro', 'recall_micro', 'recall_samples', 'recall_weighted', 'f1', 'f1_macro', 'f1_micro', 'f1_samples', 'f1_weighted', 'jaccard', 'jaccard_macro', 'jaccard_micro', 'jaccard_samples', 'jaccard_weighted']) 
Testing model on Train 
Time elapsed: (hh:mm:ss:ms) 0:00:00.101338 
train-accuracy_score: 0.8793333333333333 
train-precision_score: 0.8801029095935484 
train-recall_score: 0.8794603654731731 
train-f1_score: 0.8790867465853521 
Testing model on val 
Time elapsed: (hh:mm:ss:ms) 0:00:00.038038 
val-accuracy_score: 0.828 
val-precision_score: 0.8281390346292007 
val-recall_score: 0.828268131284296 
val-f1_score: 0.8275398148571106 
Testing model on test 
Time elapsed: (hh:mm:ss:ms) 0:00:00.042035 
test-accuracy_score: 0.836 
test-precision_score: 0.8364398704021346 
test-recall_score: 0.8374046285327054 
test-f1_score: 0.8360632377650828 
Building Model on: Support Vector Machine 
Best params for precision_score 
Best params found!{'kernel': 'rbf'} 
Time elapsed: (hh:mm:ss:ms) 0:00:00.782653 
Saving Model as: model-Support Vector Machine-.model 
Time elapsed: (hh:mm:ss:ms) 0:00:00 
Possible tests: dict_keys(['explained_variance', 'r2', 'max_error', 'matthews_corrcoef', 'neg_median_absolute_error', 'neg_mean_absolute_error', 'neg_mean_absolute_percentage_error', 'neg_mean_squared_error', 'neg_mean_squared_log_error', 'neg_root_mean_squared_error', 'neg_mean_poisson_deviance', 'neg_mean_gamma_deviance', 'accuracy', 'top_k_accuracy', 'roc_auc', 'roc_auc_ovr', 'roc_auc_ovo', 'roc_auc_ovr_weighted', 'roc_auc_ovo_weighted', 'balanced_accuracy', 'average_precision', 'neg_log_loss', 'neg_brier_score', 'positive_likelihood_ratio', 'neg_negative_likelihood_ratio', 'adjusted_rand_score', 'rand_score', 'homogeneity_score', 'completeness_score', 'v_measure_score', 'mutual_info_score', 'adjusted_mutual_info_score', 'normalized_mutual_info_score', 'fowlkes_mallows_score', 'precision', 'precision_macro', 'precision_micro', 'precision_samples', 'precision_weighted', 'recall', 'recall_macro', 'recall_micro', 'recall_samples', 'recall_weighted', 'f1', 'f1_macro', 'f1_micro', 'f1_samples', 'f1_weighted', 'jaccard', 'jaccard_macro', 'jaccard_micro', 'jaccard_samples', 'jaccard_weighted']) 
Testing model on Train 
Time elapsed: (hh:mm:ss:ms) 0:00:00.224914 
train-accuracy_score: 0.907 
train-precision_score: 0.9075584578020198 
train-recall_score: 0.9070246748878362 
train-f1_score: 0.9068355617462713 
Testing model on val 
Time elapsed: (hh:mm:ss:ms) 0:00:00.076204 
val-accuracy_score: 0.858 
val-precision_score: 0.858059622329514 
val-recall_score: 0.8583742614555488 
val-f1_score: 0.8577876815746793 
Testing model on test 
Time elapsed: (hh:mm:ss:ms) 0:00:00.079372 
test-accuracy_score: 0.857 
test-precision_score: 0.8581635805330533 
test-recall_score: 0.8590254925189768 
test-f1_score: 0.8569359666869757 
Building Model on: Neural Network (MLP) 
Best params for precision_score 
Best params found!{'activation': 'identity', 'batch_size': 4, 'learning_rate': 'adaptive'} 
Time elapsed: (hh:mm:ss:ms) 0:02:19.187453 
Saving Model as: model-Neural Network (MLP)-.model 
Time elapsed: (hh:mm:ss:ms) 0:00:00 
Possible tests: dict_keys(['explained_variance', 'r2', 'max_error', 'matthews_corrcoef', 'neg_median_absolute_error', 'neg_mean_absolute_error', 'neg_mean_absolute_percentage_error', 'neg_mean_squared_error', 'neg_mean_squared_log_error', 'neg_root_mean_squared_error', 'neg_mean_poisson_deviance', 'neg_mean_gamma_deviance', 'accuracy', 'top_k_accuracy', 'roc_auc', 'roc_auc_ovr', 'roc_auc_ovo', 'roc_auc_ovr_weighted', 'roc_auc_ovo_weighted', 'balanced_accuracy', 'average_precision', 'neg_log_loss', 'neg_brier_score', 'positive_likelihood_ratio', 'neg_negative_likelihood_ratio', 'adjusted_rand_score', 'rand_score', 'homogeneity_score', 'completeness_score', 'v_measure_score', 'mutual_info_score', 'adjusted_mutual_info_score', 'normalized_mutual_info_score', 'fowlkes_mallows_score', 'precision', 'precision_macro', 'precision_micro', 'precision_samples', 'precision_weighted', 'recall', 'recall_macro', 'recall_micro', 'recall_samples', 'recall_weighted', 'f1', 'f1_macro', 'f1_micro', 'f1_samples', 'f1_weighted', 'jaccard', 'jaccard_macro', 'jaccard_micro', 'jaccard_samples', 'jaccard_weighted']) 
Testing model on Train 
Time elapsed: (hh:mm:ss:ms) 0:00:00.002998 
train-accuracy_score: 0.8853333333333333 
train-precision_score: 0.8882215192631079 
train-recall_score: 0.8856677172315864 
train-f1_score: 0.8850680955268957 
Testing model on val 
Time elapsed: (hh:mm:ss:ms) 0:00:00.002001 
val-accuracy_score: 0.851 
val-precision_score: 0.85365102797463 
val-recall_score: 0.8505174947447642 
val-f1_score: 0.8499764581575256 
Testing model on test 
Time elapsed: (hh:mm:ss:ms) 0:00:00.001598 
test-accuracy_score: 0.852 
test-precision_score: 0.8558298730216043 
test-recall_score: 0.853230347045157 
test-f1_score: 0.8513916883518388 
